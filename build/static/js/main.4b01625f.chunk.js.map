{"version":3,"sources":["serviceWorker.js","store/reducers/uiReducer.js","store/actions/actionTypes.js","store/configureStore.js","views/Footer.js","store/actions/uiActionCreators.js","views/Header.js","views/GameStatusBadge.js","views/CurrentGame.js","const/GameStatus.js","components/Home.js","views/Slot.js","components/Lottery.js","components/Reveal.js","routes/index.jsx","App.js","index.js","assets/lotto.png"],"names":["Boolean","window","location","hostname","match","initialState","isLoading","isValidating","reducer","state","arguments","length","undefined","type","Object","objectSpread","rootReducer","combineReducers","ui","uiReducer","composeEnhancers","compose","addLoggingToDispatch","store","rawDispatch","dispatch","console","group","action","returnValue","groupEnd","Developer","styled","p","_templateObject","Title","_templateObject2","Container","div","_templateObject3","GithubLink","a","_templateObject4","connect","startLoading","stopLoading","react_default","createElement","href","target","lib","style","float","icon","size","HeaderContainer","Header_templateObject","Header_templateObject2","Header_GithubLink","styles","committed","background","color","readyForReveal","reveal","getStyle","status","GameStatusBadge","_ref","Panel","marginTop","boxShadow","width","PanelHeader","LotteryLogo","Info","fontWeight","CurrentGame","currentFee","t","nrOfPlayers","gameStatus","timeLeft","header","src","lotto","alt","views_GameStatusBadge","concat","Math","floor","GAME_STATUS","GAME_CREATED","GAME_JOINED","GAME_STARTED","0","1","2","3","JOINED_BET","PLACED_BET","WITHDRAWN_BET","web3","HomeContainer","display","flexDirection","alignItems","Inputs","marginBottom","LoginButton","height","fontSize","borderRadius","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","redirectToLottery","setState","props","history","push","views_CurrentGame","currentBet","fee","currentPhase","inside","Addon","defaultValue","user","disabled","fromWei","onClick","joinLottery","bind","Component","withRouter","contract","cookies","SlotStyle","Slot_templateObject","chosenNumbers","number","includes","_ref2","_ref3","hasCommitted","Slot","_ref4","callback","Buffer","require","justifyContent","CurrentGameContainer","TicketNumbers","flexWrap","Ticket","borderColor","betButton","abortRevealButton","clearButton","marginRight","buttonGroup","Lottery","counter","get","Date","commitTimestamps","toString","timestamps","remove","path","createTable","_this2","table","_loop","i","views_Slot","key","chooseNumber","n","_this3","numbers","assign","lastSelected","_this4","alert","sortedNumbers","sort","b","alloc","writeInt8","first_number","second_number","toHash","eth","abi","encodeParameters","log","hash","utils","soliditySha3","tx","random","methods","commit","send","from","value","on","transactionNotification","confirmationNumber","set","_this5","goToRevealPhase","_this6","reset","reload","_this7","react_router","to","bordered","endModal","position","top","Reveal","tmp","modalText","winners","winningNumbers","payout","ss","abortCommitPhase","revealNumbers","revealButton","show","onHide","refreshOnModalClose","Header","winningModal","Body","Footer","appearance","Routes","render","components_Home","components_Lottery","components_Reveal","Loader","App_templateObject","App","CONTRACT_ADDRESS","assertThisInitialized","web3Instance","Web3","currentProvider","givenProvider","networkVersion","DLottery","networks","address","dLotteryContract","Contract","timers","transactionHashes","loadDataFromSC","getRemainingTime","events","NewCommit","asyncToGenerator","regenerator_default","mark","_callee","transactionHash","wrap","_context","prev","next","toConsumableArray","stop","_x","apply","NewReveal","_callee2","_context2","_x2","Reset","_ref6","_callee3","_ref5","_context3","_x3","PhaseChange","_ref8","_callee4","_ref7","returnValues","_context4","old_phase","_x4","LotteryEnded","_ref10","_callee5","_ref9","id","_context5","_x5","Log","_ref12","_callee6","_ref11","wNumber","_context6","hexToNumber","_hex","_x6","timer","setInterval","timerBalance","getBalance","clearTimeout","startPhase","getPhaseForTimestamp","remainingTime","setSeconds","getSeconds","getTimerForPhase","now","then","res","hexToNumberString","balance","getAccounts","addresses","catch","err","current_timestamps","_ref13","commit_and_ready_for_reveal","getTimers","_ref14","LEFT_COMMIT_AND_REVEAL","TO_ABORT","WAIT_TO_GO_TO_REVEAL_PHASE","TO_REVEAL","getFee","getUser","getCurrentTimestamp","getCurrentPhase","getCommitted","current_phase","title","description","setTimeout","startValidating","Notification","open","duration","stopValidating","success","error","user_committed","phase","_this8","className","RingLoader_default","sizeUnit","loading","LinearProgress_default","react_router_dom","views_Header","overflowY","routes","message","views_Footer","withCookies","createStore","applyMiddleware","thunk","configureStore","ReactDOM","dist","es6","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.4b01625f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    UI_START_LOADING_ACTION,\n    UI_STOP_LOADING_ACTION,\n    UI_START_VALIDATING_ACTION,\n    UI_STOP_VALIDATING_ACTION\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n    isLoading: true,\n    isValidating: false,\n};\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UI_START_LOADING_ACTION:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case UI_STOP_LOADING_ACTION:\n            return {\n                ...state,\n                isLoading: false\n            };\n        case UI_START_VALIDATING_ACTION:\n            return {\n                ...state,\n                isValidating: true\n            };\n        case UI_STOP_VALIDATING_ACTION:\n            return {\n                ...state,\n                isValidating: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","export const UI_START_LOADING_ACTION = 'UI_START_LOADING_ACTION';\nexport const UI_STOP_LOADING_ACTION = 'UI_STOP_LOADING_ACTION';\nexport const UI_START_VALIDATING_ACTION = 'UI_START_VALIDATING_ACTION';\nexport const UI_STOP_VALIDATING_ACTION = 'UI_STOP_VALIDATING_ACTION';","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport uiReducer from './reducers/uiReducer';\n\nconst rootReducer = combineReducers({\n    ui: uiReducer,\n});\n\nlet composeEnhancers = compose;\n\nconst addLoggingToDispatch = store => {\n    const rawDispatch = store.dispatch;\n\n    if (!console.group) {\n        return rawDispatch;\n    }\n\n    return action => {\n        console.group(\"Return action from configure store: \", action.type);\n        // console.log(\"%c prev state\", \"color: gray\", store.getState());\n        // console.log(\"%c action\", \"color: blue\", action);\n        const returnValue = rawDispatch(action);\n        // console.log(\"%c next state\", \"color: green\", store.getState());\n        console.groupEnd(action.type);\n\n        return returnValue;\n    };\n};\n\nexport default function configureStore() {\n    const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n    store.dispatch = addLoggingToDispatch(store);\n    return store;\n}","import React from 'react';\nimport {connect} from 'react-redux'\nimport 'rsuite/dist/styles/rsuite.min.css';\nimport {uiStartLoading, uiStopLoading} from '../store/actions/uiActionCreators';\nimport styled from 'styled-components'\nimport {Icon} from \"rsuite\";\n\nconst Developer = styled.p`\n    position: fixed,\n  margin-top: 5px;\n  display: flex;\n  justify-content: center\n`;\n\nconst Title = styled.p`\n  margin-bottom: 0;\n  font-size: 18px;\n  font-weight: bolds\n`;\n\nconst Container = styled.div`\n  color: white;\n`;\nconst GithubLink = styled.a`\n  color: white;\n  margin 0 0 0 5px;\n`;\nconst Footer = () => (\n    <Container>\n        <Title>\n            Developed by:{' '}\n        </Title>\n        <Developer >Ile Cepilov\n            <GithubLink href=\"https://github.com/ilecipi\" target=\"_blank\" >\n                <Icon style={{float: 'right'}} icon=\"github\" size='lg'/>\n            </GithubLink></Developer>\n        <Developer>Elfat Esati</Developer>\n        <Developer>Tim Strasser\n            <GithubLink href=\"https://github.com/MethDamon\" target=\"_blank\" >\n                <Icon style={{float: 'right'}} icon=\"github\" size='lg'/>\n            </GithubLink></Developer>\n        <Developer>Erion Sula\n            <GithubLink href=\"https://github.com/sulasdeli\" target=\"_blank\" >\n                <Icon style={{float: 'right'}} icon=\"github\" size='lg'/>\n            </GithubLink></Developer>\n        <Developer>Ledri Thaqi</Developer>\n    </Container>\n);\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoading: state.ui.isLoading,\n    };\n};\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        startLoading: ()=>dispatch(uiStartLoading()),\n        stopLoading: ()=>dispatch(uiStopLoading()),\n    }\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Footer);\n","import {\n    UI_START_LOADING_ACTION,\n    UI_STOP_LOADING_ACTION,\n    UI_START_VALIDATING_ACTION,\n    UI_STOP_VALIDATING_ACTION\n} from \"./actionTypes\";\n\nexport const uiStartLoading = () => {\n    return {\n        type: UI_START_LOADING_ACTION\n    };\n};\n\n\nexport const uiStopLoading = () => {\n    return {\n        type: UI_STOP_LOADING_ACTION\n    };\n};\n\nexport const uiStartValidating = () => {\n    return {\n        type: UI_START_VALIDATING_ACTION\n    };\n};\n\nexport const uiStopValidating = () => {\n    return {\n        type: UI_STOP_VALIDATING_ACTION\n    };\n};","import React from 'react';\nimport {connect} from 'react-redux'\nimport 'rsuite/dist/styles/rsuite.min.css'; // or 'rsuite/dist/styles/rsuite.min.css'\nimport {uiStartLoading, uiStopLoading} from '../store/actions/uiActionCreators';\nimport styled from 'styled-components'\nimport {Icon} from \"rsuite\";\n\nconst HeaderContainer = styled.div`\n  font-size: 18px;\n  padding: 16px;\n  height: 50px;\n`;\n\nconst GithubLink = styled.a`\n  color: white;\n`;\nconst Header = () => (\n    <HeaderContainer>\n        <GithubLink href=\"https://github.com/MethDamon/bcoln-challenge-task\" target=\"_blank\" >\n            <Icon style={{float: 'left'}} icon=\"github\" size='lg'/>\n        </GithubLink>\n    </HeaderContainer>\n);\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoading: state.ui.isLoading,\n    };\n};\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        startLoading: ()=>dispatch(uiStartLoading()),\n        stopLoading: ()=>dispatch(uiStopLoading()),\n    }\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Header);\n","import React from \"react\";\nimport {Tag} from \"rsuite\";\n\nconst styles = {\n    committed: {\n        background: \"linear-gradient(60deg, #66bb6a, #43a047)\",\n        color: \"white\"\n    },\n    readyForReveal: {\n        background: 'linear-gradient(60deg, #ffa726, #fb8c00)',\n        color: \"white\"\n    },\n    reveal: {\n        background: \"linear-gradient(60deg, #ef5350, #e53935)\",\n        color: \"white\"\n    }\n};\n\nconst GameStatusBadge = ({status}) =>(\n    <Tag style={getStyle(status)}>{status}</Tag>\n);\n\nconst getStyle = (status) => {\n    return status === 'COMMITTED' ? styles.committed : status === 'READY FOR REVEAL' ? styles.readyForReveal: styles.reveal\n};\n\nexport default GameStatusBadge","import React from 'react';\nimport { Panel } from 'rsuite';\nimport lotto from '../assets/lotto.png'\nimport GameStatusBadge from \"./GameStatusBadge\";\n\nconst styles = {\n    Panel: {\n        marginTop: \"5px\",\n        background: 'linear-gradient(0deg, #11cdef 0,#1171ef 100%)',\n        color: \"white\",\n        boxShadow: \"0 1px 3px 0 rgba(0,0,0,.5)\",\n        width: 450,\n    },\n    PanelHeader: {\n        color: \"white\"\n    },\n    LotteryLogo: {\n      width: '55px',\n    },\n    Info: {\n        fontWeight: \"bold\"\n    }\n};\n\nconst CurrentGame = ({currentFee, nrOfPlayers, gameStatus, timeLeft}) =>{\n    return(\n        <Panel header={<img style={styles.LotteryLogo} src={lotto} alt=\"Logo\" />} style={styles.Panel}>\n\n            <h4 style={styles.Info}>Current Number Of Players: {nrOfPlayers}</h4>\n            {/*<div style={styles.Info}>Current Fee: {currentFee} WEI</div>*/}\n            <h4 style={styles.Info}>Lottery Status: <GameStatusBadge status={gameStatus}/></h4>\n            <h4 style={styles.Info}>Time left: {getTimeString(timeLeft)}</h4>\n        </Panel>\n    );\n};\n\nfunction getTimeString(t){\n    return `${Math.floor((t % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))}:${Math.floor((t % (1000 * 60 * 60)) / (1000 * 60))}:${Math.floor((t % (1000 * 60)) / 1000)}`\n}\n\nexport default CurrentGame;","const GAME_STATUS = {\n    GAME_CREATED: 'CREATE GAME',\n    GAME_JOINED: 'JOIN GAME',\n    GAME_STARTED: 'START GAME',\n    0: 'COMMITTED',\n    1: 'READY FOR REVEAL',\n    2: 'REVEAL PHASE',\n    3: 'PAYOUT',\n    JOINED_BET: 'JOIN BET',\n    PLACED_BET: 'PLACE BET',\n    WITHDRAWN_BET: 'WITHDRAW BET'\n};\n\nexport default GAME_STATUS;","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {Button, Panel} from 'rsuite';\nimport 'rsuite/dist/styles/rsuite.min.css';\nimport {Input, InputGroup, Icon} from 'rsuite';\nimport CurrentGame from '../views/CurrentGame'\nimport GAME_STATUS from '../const/GameStatus';\nimport {uiStartLoading, uiStopLoading} from '../store/actions/uiActionCreators';\nimport { withRouter, Redirect } from 'react-router-dom'\n\nlet web3 = window.web3;\n\nconst styles = {\n    HomeContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    Container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        background: \"white\",\n        width: 600\n    },\n    Inputs: {\n        width: 450,\n        marginBottom: 10,\n        marginTop: 20,\n    },\n    LoginButton: {\n        width: 250,\n        height: 50,\n        marginBottom: 10,\n        marginTop: 10,\n        fontSize: 20,\n        fontWeight: 800,\n        background: \"linear-gradient(0deg, #ffa726, #fb8c00)\",\n        color: \"#FFFFFF\",\n        boxShadow: \"0 1px 3px 0 rgba(0,0,0,.29)\"\n    },\n    CurrentGame: {\n        width: 500,\n        marginTop: 20,\n        marginBottom: 100,\n        borderRadius: 7,\n        fontSize: 30\n    }\n};\n\nclass Home extends Component {\n\n    constructor() {\n       super();\n        this.state = {\n            redirectToLottery: false,\n        }\n    }\n\n    joinLottery(){\n        this.setState({redirectToLottery: true})\n        this.props.history.push('/lottery')\n\n    }\n\n    render() {\n        return(\n            <div style={{height:'70vh'}}>\n            <Panel style={styles.HomeContainer}>\n                <Panel style={styles.Container}>\n                    < CurrentGame style={styles.CurrentGame}\n                                  nrOfPlayers={this.props.committed}\n                                  currentBet={this.props.fee}\n                                  gameStatus={GAME_STATUS[this.props.currentPhase]}\n                                  timeLeft={this.props.timeLeft}\n                    />\n                    <InputGroup inside style={styles.Inputs}>\n                        <InputGroup.Addon>\n                            <Icon icon=\"avatar\"/>\n                        </InputGroup.Addon>\n                        <Input  size = {'lg'} defaultValue = {this.props.user}\n                                disabled = {true}/>\n                    </InputGroup>\n\n                    <InputGroup style={styles.Inputs}>\n                        <InputGroup.Addon>ETH Fee</InputGroup.Addon>\n                        <Input size={'lg'}\n                               defaultValue = {web3.fromWei(this.props.fee, 'ether')}\n                               disabled = {true}\n                        />\n                    </InputGroup>\n                    <Button style={styles.LoginButton}\n                            onClick={this.joinLottery.bind(this)}>\n                        Join the Lottery\n                    </Button>\n                </Panel>\n            </Panel>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, {user, committed, currentPhase, fee, web3, contract, cookies, timeLeft}) => {\n    return {\n        isLoading: state.ui.isLoading,\n        user,\n        committed,\n        currentPhase,\n        fee,\n        web3,\n        contract,\n        cookies,\n        timeLeft\n    };\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        startLoading: ()=>dispatch(uiStartLoading()),\n        stopLoading: ()=>dispatch(uiStopLoading()),\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Home));\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst SlotStyle = styled.div`\n  display: flex;\n  text-transform: uppercase;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  color: ${({chosenNumbers, number}) => (chosenNumbers.includes(number) ? \"white\" : \"black\")} ;\n  //background: #f0cb35; /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n  background: ${({chosenNumbers, number}) => (chosenNumbers.includes(number) ? \"linear-gradient(45deg,#f9b18e,#EA5455 100%)\" : \"#ffffff\")} ;\n  margin: 3px;\n  height: 60px;\n  width: 60px;\n  font-size: 20px;\n  border-radius: 100%;\n  border-color: black;\n  \n:hover {\n    transition: all 0.4s ease 0s;\n    cursor: ${({hasCommitted}) => (hasCommitted ? \"default\" : \"pointer\")};\n}`;\n\nconst Slot = ({number, chosenNumbers, callback, hasCommitted}) => {\n    return (\n        <SlotStyle onClick={callback} chosenNumbers={chosenNumbers} number={number} hasCommitted = {hasCommitted}>\n            {number}\n        </SlotStyle>\n    );\n};\n\nexport default Slot;","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {Button, Icon, Panel} from 'rsuite';\nimport 'rsuite/dist/styles/rsuite.min.css';\nimport CurrentGame from '../views/CurrentGame'\nimport GAME_STATUS from '../const/GameStatus';\nimport {uiStartLoading, uiStopLoading} from '../store/actions/uiActionCreators';\nimport {withRouter, Redirect} from 'react-router-dom';\nimport Slot from \"../views/Slot\";\n\nconst Buffer = require('buffer/').Buffer;\n\nconst styles = {\n    HomeContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    Container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        background: \"white\",\n        width: 600\n    },\n    CurrentGameContainer: {\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    TicketNumbers: {\n        width: 550,\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: \"white\",\n        flexWrap: \"wrap\"\n    },\n    Ticket: {\n        marginTop: 20,\n        width: 550,\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\",\n        borderColor: \"#afafaf\"\n    },\n    betButton: {\n        width: 250,\n        height: 50,\n        marginBottom: 10,\n        marginTop: 10,\n        fontSize: 20,\n        fontWeight: 800,\n        color: \"#FFFFFF\",\n        boxShadow: \"0 1px 3px 0 rgba(0,0,0,.29)\"\n    },\n    abortRevealButton: {\n        width: 250,\n        height: 50,\n        marginBottom: 10,\n        marginTop: 10,\n        fontSize: 20,\n        fontWeight: 800,\n        background: \"linear-gradient(0deg, #ef5350, #e53935)\",\n        color: \"#FFFFFF\",\n        boxShadow: \"0 1px 3px 0 rgba(0,0,0,.29)\"\n    },\n    clearButton: {\n        float: \"right\",\n        marginRight: 15,\n        marginTop: 15,\n        marginBottom: -15,\n        fontSize: 20,\n        fontWeight: 800,\n    },\n    buttonGroup: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginTop: 15\n    },\n};\n\nclass Lottery extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            chosenNumbers: [-1, -1],\n            counter: 0,\n        }\n    }\n\n\n    async componentDidMount() {\n        let chosenNumbers = await this.props.cookies.get('chosenNumbers');\n        let commitTimestamps = new Date(await this.props.cookies.get('commitTimestamp'));\n        if (!!chosenNumbers && commitTimestamps.toString() === this.props.timestamps['commit'].toString()) {\n            this.setState({\n                chosenNumbers\n            })\n        } else {\n            this.props.cookies.remove('chosenNumbers', {path: '/'});\n            this.props.cookies.remove('commitTimestamp', {path: '/'});\n\n        }\n        this.createTable();\n    }\n\n    createTable() {\n        let table = [];\n        for (let i = 0; i < 16; i++) {\n            table.push(<Slot key={i} number={i + 1} chosenNumbers={this.state.chosenNumbers} callback={() => {\n                this.chooseNumber(i + 1)\n            }}/>)\n        }\n        this.setState({table})\n    }\n\n    chooseNumber(n) {\n        if(this.props.hasCommitted) return;\n        let numbers = Object.assign([], this.state.chosenNumbers);\n        let table = Object.assign([], this.state.table);\n\n        //Avoid choosing twice the same number\n        if (!numbers.includes(n)) {\n            let lastSelected = this.state.chosenNumbers[(this.state.counter) % 2];\n            numbers[this.state.counter % 2] = n;\n\n            //update the numbers which are no longer selected\n            if (lastSelected > 0) {\n                table[lastSelected - 1] = (\n                    <Slot key={lastSelected - 1} number={lastSelected} chosenNumbers={numbers} hasCommitted = {this.props.hasCommitted} callback={() => {\n                        this.chooseNumber(lastSelected)\n                    }}/>\n                );\n            }\n            //update the selected number\n            table[n - 1] = (\n                <Slot key={n - 1} number={n} chosenNumbers={numbers} callback={() => {\n                    this.chooseNumber(n);\n                }}/>\n            );\n            this.setState({\n                table,\n                chosenNumbers: numbers,\n                counter: this.state.counter + 1\n            });\n        }\n    }\n\n    joinLottery() {\n        if (!this.state.chosenNumbers.includes(-1)) {\n            let sortedNumbers = Object.assign([], this.state.chosenNumbers);\n            sortedNumbers = sortedNumbers.sort((a, b) => {\n                return a - b\n            });\n            //TODO. fix the hash\n            let n1 = new Buffer.alloc(1);\n            n1.writeInt8(sortedNumbers[0]);\n            let n2 = new Buffer.alloc(1);\n            n2.writeInt8(sortedNumbers[1]);\n            //let addressedHash = this.props.web3.utils.sha3(this.props.user);\n            //let toHash = Buffer.concat([n1, Buffer.from(addressedHash), n2]);\n            let first_number = sortedNumbers[0];\n            let second_number = sortedNumbers[1];\n            let toHash = this.props.web3.eth.abi.encodeParameters(['uint8', 'address', 'uint8'], [first_number, this.props.user, second_number]);\n            console.log('hash input', toHash);\n            let hash = this.props.web3.utils.soliditySha3(toHash);\n            console.log('hash output', hash);\n            let tx = Math.random()*10000;\n            this.props.contract.methods\n                .commit(hash)\n                .send({from: this.props.user, value: this.props.fee}, )\n                .on('transactionHash',()=>{\n                    this.props.transactionNotification('open', tx,'Transaction Sent', 'Your transaction is being validated...');\n                })\n                .on('confirmation',(confirmationNumber)=>{\n                    if(confirmationNumber===1){\n                        this.props.cookies.set('chosenNumbers', this.state.chosenNumbers, {path: '/'});\n                        //save the timestamp of the commit phase and used it as id for saving only the numbers\n                        //of the current lottery\n                        this.props.cookies.set('commitTimestamp', this.props.timestamps['commit'], {path: '/'});\n                        this.props.transactionNotification('close',tx);\n                        this.props.transactionNotification('success', Math.random()*10000,'Transaction Validated','Your transaction has been validated');\n                    }\n                });\n        } else {\n            alert(\"NUMBERS NOT CHOSEN\")\n        }\n    }\n\n    goToRevealPhase() {\n        let tx = Math.random()*10000;\n        this.props.contract.methods\n            .goToRevealPhase()\n            .send({from: this.props.user})\n            .on('transactionHash',()=>{\n                this.props.transactionNotification('open', tx,'Transaction Sent', 'Your transaction is being validated...');\n            })\n            .on('confirmation',(confirmationNumber)=>{\n                if(confirmationNumber===1){\n                    this.props.transactionNotification('close',tx);\n                    this.props.transactionNotification('success', Math.random()*10000,'Transaction Validated','Your transaction has been validated');\n                }\n            });\n    }\n\n    reset() {\n        this.props.contract.methods\n            .reset()\n            .send({ from: this.props.user }, () => {\n                window.location.reload();\n                // type Config{\n                //     title:string,\n                //         description:React.ElementType,\n                //         duration?:number,\n                //         placement?:string,\n                //         top?:number,\n                //         bottom?:number,\n                //         onClose?:()=>void,\n                //         style?:Object,\n                //         key?:string\n                // }\n                let tx = Math.random() * 10000;\n                this.props.contract.methods\n                    .reset()\n                    .send({ from: this.props.user })\n                    .on('transactionHash', () => {\n                        this.props.transactionNotification('open', tx, 'Transaction Sent', 'Your transaction is being validated...');\n                    })\n                    .on('confirmation', (confirmationNumber) => {\n                        if (confirmationNumber === 1) {\n                            this.props.transactionNotification('close', tx);\n                            this.props.transactionNotification('success', Math.random() * 10000, 'Transaction Validated', 'Your transaction has been validated');\n                        }\n                    });\n            });\n    }\n\n    render() {\n        if (GAME_STATUS[this.props.currentPhase] === GAME_STATUS[2]) {\n            return (<Redirect to=\"/reveal\"/>)\n        }\n        return (\n            <div style={{height:'70vh'}}>\n            <Panel style={styles.HomeContainer}>\n                <Panel style={styles.Container}>\n                    <div style={styles.CurrentGameContainer}>\n                        <CurrentGame\n                            nrOfPlayers={this.props.committed}\n                            currentBet={this.props.fee}\n                            gameStatus={GAME_STATUS[this.props.currentPhase]}\n                            timeLeft={this.props.timeLeft}\n                        />\n                    </div>\n                    <div style={styles.CurrentGameContainer}>\n                        <Panel style={styles.Ticket}\n                               header={<h3 style={{fontWeight: \"bold\", color: \"#4e4e4e\"}}>Lottery Ticket</h3>} bordered>\n                            <div style={styles.TicketNumbers}>\n                                {this.state.table}\n                            </div>\n                        </Panel>\n                    </div>\n                    <div style={styles.buttonGroup}>\n                        <Button style={styles.abortRevealButton}\n                                onClick={() => {\n                                    this.reset()\n                                }\n                                }>\n                            Abort Commit Phase\n                        </Button>\n                        {GAME_STATUS[this.props.currentPhase] == GAME_STATUS[1] &&\n                        this.props.timeLeft === 0 ? (\n                            <Button style={styles.abortRevealButton}\n                                    onClick={() => {\n                                        this.goToRevealPhase()\n                                    }\n                                    }>\n                                {'Go to reveal phase'}\n                            </Button>\n                        ) : (\n                            <Button color=\"green\"\n                                    style={styles.betButton}\n                                    disabled={this.state.chosenNumbers.includes(-1)||this.props.hasCommitted}\n                                    onClick={() => {\n                                        this.joinLottery()\n                                    }\n                                    }>\n                                Buy\n                            </Button>)}\n                    </div>\n                </Panel>\n            </Panel>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, {user, committed, currentPhase, fee, web3, contract, cookies, timeLeft, timestamps, hasCommitted,transactionNotification}) => {\n    return {\n        isLoading: state.ui.isLoading,\n        user,\n        committed,\n        currentPhase,\n        fee,\n        web3,\n        contract,\n        cookies,\n        timeLeft,\n        timestamps,\n        hasCommitted,\n        transactionNotification\n    };\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        startLoading: () => dispatch(uiStartLoading()),\n        stopLoading: () => dispatch(uiStopLoading()),\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Lottery));\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {Button, Panel, Modal} from 'rsuite';\nimport 'rsuite/dist/styles/rsuite.min.css'; // or 'rsuite/dist/styles/rsuite.min.css'\nimport styled from 'styled-components';\nimport {css} from '@emotion/core';\nimport {Input, InputGroup, Icon} from 'rsuite';\nimport CurrentGame from '../views/CurrentGame'\nimport GAME_STATUS from '../const/GameStatus';\nimport {uiStartLoading, uiStopLoading} from '../store/actions/uiActionCreators';\nimport RingLoader from 'react-spinners/RingLoader';\nimport {withRouter, Redirect} from 'react-router-dom';\n\nimport Slot from \"../views/Slot\";\n\nconst styles = {\n    HomeContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    Container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        background: \"white\",\n        width: 600\n    },\n    CurrentGameContainer: {\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    TicketNumbers: {\n        width: 550,\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: \"white\",\n        flexWrap: \"wrap\"\n    },\n    Ticket: {\n        marginTop: 20,\n        width: 550,\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\",\n        borderColor: \"#afafaf\"\n    },\n    betButton: {\n        width: 250,\n        height: 50,\n        marginBottom: 10,\n        marginTop: 10,\n        fontSize: 20,\n        fontWeight: 800,\n        color: \"#FFFFFF\",\n        boxShadow: \"0 1px 3px 0 rgba(0,0,0,.29)\"\n    },\n    abortRevealButton: {\n        width: 250,\n        height: 50,\n        marginBottom: 10,\n        marginTop: 10,\n        fontSize: 20,\n        fontWeight: 800,\n        background: \"linear-gradient(0deg, #ef5350, #e53935)\",\n        color: \"#FFFFFF\",\n        boxShadow: \"0 1px 3px 0 rgba(0,0,0,.29)\"\n    },\n    clearButton: {\n        float: \"right\",\n        marginRight: 15,\n        marginTop: 15,\n        marginBottom: -15,\n        fontSize: 20,\n        fontWeight: 800,\n    },\n    buttonGroup: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginTop: 15\n    },\n\n    endModal : {\n    position: \"relative\",\n        top: \"25vh\",\n        width: \"50%\",\n        fontSize: '30px'\n    }\n};\n\n\nclass Reveal extends Component {\n    async componentDidMount() {\n        let chosenNumbers = await this.props.cookies.get('chosenNumbers');\n        let commitTimestamps = new Date(await this.props.cookies.get('commitTimestamp'));\n        if (!!chosenNumbers && commitTimestamps.toString() === this.props.timestamps['commit'].toString()) {\n            this.setState({\n                chosenNumbers\n            })\n        } else {\n            this.props.cookies.remove('chosenNumbers', {path: '/'});\n            this.props.cookies.remove('commitTimestamp', {path: '/'});\n\n        }\n        this.createTable()\n    }\n\n    createTable() {\n        let table = [];\n        for (let i = 0; i < 16; i++) {\n            table.push(<Slot key={i} number={i + 1} chosenNumbers={this.state.chosenNumbers} callback={() => {\n                this.chooseNumber(i + 1)\n            }}/>)\n        }\n        this.setState({table})\n    }\n\n    chooseNumber(n) {\n        let numbers = Object.assign([], this.state.chosenNumbers);\n        let table = Object.assign([], this.state.table);\n        //Avoid choosing twice the same number\n        if (!numbers.includes(n)) {\n            let lastSelected = this.state.chosenNumbers[(this.state.counter) % 2];\n            numbers[this.state.counter % 2] = n;\n\n            //update the numbers which are no longer selected\n            if (lastSelected > 0) {\n                table[lastSelected - 1] = (\n                    <Slot key={lastSelected - 1} number={lastSelected} chosenNumbers={numbers} callback={() => {\n                        this.chooseNumber(lastSelected)\n                    }}/>\n                );\n            }\n            //update the selected number\n            table[n - 1] = (\n                <Slot key={n - 1} number={n} chosenNumbers={numbers} callback={() => {\n                    this.chooseNumber(n);\n                }}/>\n            );\n            this.setState({\n                table,\n                chosenNumbers: numbers,\n                counter: this.state.counter + 1\n            });\n        }\n    }\n\n    revealNumbers() {\n        if (!this.state.chosenNumbers.includes(-1)) {\n            let sortedNumbers = Object.assign([], this.state.chosenNumbers);\n            sortedNumbers = sortedNumbers.sort((a, b) => {\n                return a - b\n            });\n            let tx = Math.random() * 10000;\n            this.props.contract.methods\n                .reveal(sortedNumbers[0], sortedNumbers[1])\n                .send({from: this.props.user})\n                .on('transactionHash', () => {\n                    this.props.transactionNotification('open', tx, 'Transaction Sent', 'Your transaction is being validated...');\n                })\n                .on('confirmation', (confirmationNumber) => {\n                    if (confirmationNumber === 1) {\n                        this.props.transactionNotification('close', tx);\n                        this.props.transactionNotification('success', Math.random() * 10000, 'Transaction Validated', 'Your transaction has been validated');\n                    }\n                });\n        } else {\n            alert(\"NUMBERS NOT CHOSEN\")\n        }\n\n\n    }\n\n    constructor() {\n        super();\n        this.state = {\n            chosenNumbers: [-1, -1],\n            counter: 0,\n        }\n    }\n\n    revealButton() {\n        let tmp = Object.assign([], this.state.chosenNumbers);\n        tmp = tmp.sort((a, b) => {\n            return a - b\n        });\n        if (tmp.includes(-1)) {\n            return \"Re-select your numbers\";\n        } else {\n            return `Reveal your numbers: ${tmp[0]}, ${tmp[1]}`;\n        }\n    }\n\n    winningModal(){\n        let modalText = [];\n        if(this.props.winners.includes(this.props.user)){\n            modalText[0] ='Congratulations! You won the lottery!';\n        }else{\n            modalText[0] = 'You lost!\\n'\n        }\n        if(this.props.winners.length>0){\n            modalText[1] = `${this.props.winners.length} participant won the lottery`;\n        }else{\n            modalText[1] = 'Nobody won the jackpot\\n'\n        }\n        modalText[2] = `Extracted numbers: ${this.props.winningNumbers[0]} - ${this.props.winningNumbers[1]}`;\n\n        return modalText\n    }\n\n    abortCommitPhase() {\n        let tx = Math.random() * 10000;\n        this.props.contract.methods\n            .reset()\n            .send({from: this.props.user})\n            .on('transactionHash', () => {\n                this.props.transactionNotification('open', tx, 'Transaction Sent', 'Your transaction is being validated...');\n            })\n            .on('confirmation', (confirmationNumber) => {\n                if (confirmationNumber === 1) {\n                    this.props.transactionNotification('close', tx);\n                    this.props.transactionNotification('success', Math.random() * 10000, 'Transaction Validated', 'Your transaction has been validated');\n                }\n            });\n    }\n\n    payout() {\n        this.props.contract.methods\n            .payout()\n            .send({from: this.props.user})\n            .on('transactionHash', (ss) => {\n                console.log(\"-------------->\" + ss)\n            })\n            .on('confirmation', (confirmationNumber) => {\n                console.log(\"---->\" + confirmationNumber)\n            });\n    }\n\n    render() {\n        if (GAME_STATUS[this.props.currentPhase] === GAME_STATUS[0] || GAME_STATUS[this.props.currentPhase] === GAME_STATUS[1]) {\n            return (<Redirect to=\"/lottery\"/>)\n        }\n        return (\n            <div style={{height: '70vh'}}>\n                <Panel style={styles.HomeContainer}>\n                    <Panel style={styles.Container}>\n                        <div style={styles.CurrentGameContainer}>\n                            < CurrentGame nrOfPlayers={this.props.committed}\n                                          currentBet={this.props.fee}\n                                          gameStatus={GAME_STATUS[this.props.currentPhase]}\n                                          timeLeft={this.props.timeLeft}\n                            />\n                        </div>\n                        <div style={styles.CurrentGameContainer}>\n                            <Panel style={styles.Ticket}\n                                   header={<h3 style={{fontWeight: \"bold\", color: \"#4e4e4e\"}}>Lottery Ticket</h3>}\n                                   bordered>\n                                <div style={styles.TicketNumbers}>\n                                    {this.state.table}\n                                </div>\n                            </Panel>\n                        </div>\n                        <div style={styles.buttonGroup}>\n                            <Button style={styles.abortRevealButton}\n                                    onClick={() => {\n                                        this.abortCommitPhase()\n                                    }\n                                    }\n                            >\n                                Abort Commit Phase\n                            </Button>\n                            <Button style={styles.betButton}\n                                    color=\"green\"\n                                    disabled={this.state.chosenNumbers.includes(-1)}\n                                    onClick={() => {\n                                        this.revealNumbers()\n                                    }\n                                    }\n                            >\n                                {this.revealButton()}\n                            </Button>\n                            <Button style={styles.betButton}\n                                    color=\"green\"\n                                    onClick={() => {\n                                        this.payout()\n                                    }\n                                    }\n                            >\n                                REVEAL\n                            </Button>\n                        </div>\n                    </Panel>\n                </Panel>\n                <Modal  style = {styles.endModal} show={this.props.winningNumbers.length > 0} onHide={this.props.refreshOnModalClose}>\n                    <Modal.Header >\n                        <Modal.Title style={{fontWeight: \"bold\", fontSize:\"40px\"}}>{this.winningModal()[0]}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div>{this.winningModal()[1]}</div>\n                        <div>{this.winningModal()[2]}</div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={this.props.refreshOnModalClose} appearance=\"primary\">\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n// const props = ({user})=>{\n//     return {user}\n// }\n\nconst mapStateToProps = (state, {user, committed, currentPhase, fee, web3, contract, cookies, timeLeft, timestamps, winners, refreshOnModalClose, winningNumbers}) => {\n    return {\n        isLoading: state.ui.isLoading,\n        user,\n        committed,\n        currentPhase,\n        fee,\n        web3,\n        contract,\n        cookies,\n        timeLeft,\n        timestamps,\n        winners,\n        refreshOnModalClose,\n        winningNumbers\n    };\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        startLoading: () => dispatch(uiStartLoading()),\n        stopLoading: () => dispatch(uiStopLoading()),\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Reveal));\n","import {Route, Switch, Redirect} from \"react-router-dom\";\n\nimport React from \"react\";\nimport Home from \"../components/Home\";\nimport Lottery from \"../components/Lottery\";\nimport Reveal from \"../components/Reveal\";\n\nconst Routes = ({state, cookies, transactionNotification, refreshOnModalClose}) => (\n    <Switch>\n        <Route path=\"/join\" render={(props) => (\n            <Home {...props}\n                  user={state.user}\n                  committed={state.committed}\n                  currentPhase={state.currentPhase}\n                  fee={state.fee}\n                  contract={state.contract}\n                  web3={state.web3}\n                  cookies={cookies}\n                  timeLeft={state.timeLeft}\n                  hasCommitted={state.hasCommitted}\n                  transactionNotification={transactionNotification}/>)\n        }/>\n        <Route path=\"/lottery\" render={(props) => (\n            <Lottery {...props}\n                     user={state.user}\n                     committed={state.committed}\n                     currentPhase={state.currentPhase}\n                     fee={state.fee}\n                     contract={state.contract}\n                     web3={state.web3}\n                     cookies={cookies}\n                     timeLeft={state.timeLeft}\n                     timestamps={state.timestamps}\n                     hasCommitted={state.hasCommitted}\n                     transactionNotification={transactionNotification}/>\n        )\n        }/>\n        <Route path=\"/reveal\" render={(props) => (\n            <Reveal {...props}\n                    user={state.user}\n                    committed={state.committed}\n                    currentPhase={state.currentPhase}\n                    fee={state.fee}\n                    contract={state.contract}\n                    web3={state.web3}\n                    cookies={cookies}\n                    timeLeft={state.timeLeft}\n                    timestamps={state.timestamps}\n                    hasCommitted={state.hasCommitted}\n                    transactionNotification={transactionNotification}\n                    winners={state.winners}\n                    refreshOnModalClose={refreshOnModalClose}\n                    winningNumbers={state.winningNumbers}/>\n        )\n        }/>\n        <Redirect from='/*' to='/join'/>\n    </Switch>\n);\n\nexport default Routes","import React, {Component} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom'\nimport Web3 from \"web3\";\nimport Footer from \"./views/Footer\";\nimport Header from \"./views/Header\";\nimport RingLoader from 'react-spinners/RingLoader';\nimport styled from \"styled-components\";\nimport './App.css';\nimport {uiStartLoading, uiStartValidating, uiStopLoading, uiStopValidating} from \"./store/actions/uiActionCreators\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {withCookies} from \"react-cookie\"\nimport DLottery from \"./abis/DLottery\"\nimport Routes from './routes/index'\nimport {Notification} from \"rsuite\";\nimport LinearProgress from \"@material-ui/core/LinearProgress/LinearProgress\";\nimport GAME_STATUS from \"./const/GameStatus\";\n\nlet web3 = window.web3;\n\nconst Loader = styled.div`\n    height: 70vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border-color: red;\n`;\n\nclass App extends Component {\n\n    constructor() {\n        super();\n        this.transactionNotification = this.transactionNotification.bind(this);\n        this.refreshOnModalClose = this.refreshOnModalClose.bind(this);\n        let CONTRACT_ADDRESS;\n        let web3Instance = null;\n\n        if (typeof  web3 !== 'undefined') {\n            web3Instance = new Web3(web3.currentProvider);\n            if (web3Instance.givenProvider.networkVersion)\n                CONTRACT_ADDRESS = DLottery.networks[web3Instance.givenProvider.networkVersion].address;\n            else\n            // NetworkVersion = 3 (Ropsten) / 5777 (Ganache)\n                CONTRACT_ADDRESS = DLottery.networks[\"3\"].address\n        } else {\n            alert('Please install a Web3 Provider (Metamask)')\n        }\n\n        const dLotteryContract = new web3Instance.eth.Contract(\n            DLottery.abi,\n            CONTRACT_ADDRESS\n        );\n\n        this.state = {\n            isLoading: true,\n            web3: web3Instance,\n            contract: dLotteryContract,\n            user: '',\n            timestamps: {},\n            committed: 0,\n            currentPhase: '',\n            fee: 0,\n            timers: {},\n            timeLeft: -1,\n            hasCommitted: false,\n            transactionHashes: [],\n            winners: [],\n            winningNumbers: [],\n        }\n    }\n\n    async componentDidMount() {\n        //TODO: get the other variables required\n        await this.loadDataFromSC();\n        this.getRemainingTime();\n        this.props.stopLoading();\n        //this.setState({isLoading: false})\n        const commitEvent = this.state.contract.events.NewCommit();\n        commitEvent.on('data', async ({transactionHash}) => {\n            if (!this.state.transactionHashes.includes(transactionHash)) {\n                console.log(\"commitEvent\");\n                this.setState({\n                    transactionHashes: [...this.state.transactionHashes, transactionHash]\n                });\n                this.loadDataFromSC();\n            }\n            //TODO: load only the new committed players?\n        });\n        //TEST TODO: reload only necessary data\n        const revealEvent = this.state.contract.events.NewReveal();\n        revealEvent.on('data', async ({transactionHash}) => {\n            if (!this.state.transactionHashes.includes(transactionHash)) {\n                console.log(\"revealEvent\");\n                this.setState({\n                    transactionHashes: [...this.state.transactionHashes, transactionHash]\n                });\n                //TODO: do not reaload everything!\n                //this.loadDataFromSC();\n            }\n            //TODO: load only the new committed players?\n        });\n\n        const resetEvent = this.state.contract.events.Reset();\n        resetEvent.on('data', async ({transactionHash}) => {\n            if (!this.state.transactionHashes.includes(transactionHash)) {\n                console.log(\"commitEvent\");\n                this.setState({\n                    transactionHashes: [...this.state.transactionHashes, transactionHash]\n                });\n                //await this.loadDataFromSC();\n            }\n            //TODO: load only the new committed players?\n        });\n\n        const phaseChangeEvent = this.state.contract.events.PhaseChange();\n        phaseChangeEvent.on('data', async ({transactionHash, returnValues}) => {\n            if (!this.state.transactionHashes.includes(transactionHash)) {\n                console.log(\"phaseChangeEvent\", returnValues);\n                this.setState({\n                    transactionHashes: [...this.state.transactionHashes, transactionHash]\n                });\n                if(returnValues.old_phase!==2&&returnValues.old_phase!==3){\n                    //Avoid reloading data if the winning modal at the end is open\n                    //It reloads anyway when the modal is closed\n                    this.loadDataFromSC();\n                }\n            }\n            //TODO: load only the new committed players?\n        });\n\n        const lotteryEndedEvent = this.state.contract.events.LotteryEnded();\n        lotteryEndedEvent.on('data', async ({id, returnValues}) => {\n                console.log(\"ENDED , \", id);\n                if (!this.state.transactionHashes.includes(id)) {\n                    console.log(\"lotterEndedEvent\");\n                    this.setState({\n                        transactionHashes: [...this.state.transactionHashes, id],\n                        winners: returnValues.winners\n                    });\n                }\n            }\n        );\n\n        const winningNumberEvent = this.state.contract.events.Log();\n\n        winningNumberEvent.on('data', async ({id, returnValues}) => {\n            if (!this.state.transactionHashes.includes(id)) {\n                let wNumber= this.state.web3.utils.hexToNumber(returnValues.number._hex)\n                this.setState({\n                    transactionHashes: [...this.state.transactionHashes, id],\n                    winningNumbers: [...this.state.winningNumbers, wNumber]\n                });\n                console.log('Winning Numbers -->', this.state.winningNumbers);\n                //await this.loadDataFromSC();\n            }\n        });\n\n\n        this.timer = setInterval(() => {\n            this.getRemainingTime()\n        }, 1000);\n\n        //TODO remove after testing\n        this.timerBalance = setInterval(() => {\n            this.getBalance();\n        }, 5000);\n\n    }\n\n    refreshOnModalClose(){\n            this.loadDataFromSC();\n            this.setState({\n                winners: [],\n                winningNumbers: []\n            })\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timer);\n        clearTimeout(this.timerBalance);\n\n    }\n\n    getRemainingTime() {\n        let startPhase = new Date(this.state.timestamps[this.getPhaseForTimestamp(this.state.currentPhase)]);\n        let endPhase = startPhase.setSeconds(startPhase.getSeconds() + this.getTimerForPhase(this.state.currentPhase));\n        let remainingTime = endPhase - Date.now();\n        //If payout phase then just show 0\n        if (remainingTime <= 0 || this.state.currentPhase === 3) {\n            remainingTime = 0;\n        }\n        this.setState({\n            timeLeft: remainingTime\n        });\n    }\n\n    async getBalance() {\n        if (this.state.user) {\n            let balance = await this.state.contract.methods\n                .getBalance()\n                .call({from: this.state.user})\n                .then(res => {\n                    return this.hexToNumberString(res._hex)\n                });\n\n            console.log(this.state.web3.utils.fromWei(balance))\n        }\n    }\n\n    getUser() {\n        return this.state.web3.eth\n            .getAccounts()\n            .then(addresses => {\n                console.log(addresses)\n                return addresses[0];\n            })\n            .catch(err => {\n                console.log('error getting address ' + err);\n            });\n    }\n\n    async getCurrentTimestamp() {\n        return await this.state.contract.methods\n            .current_timestamps()\n            .call({from: this.state.user})\n            .then(res => {\n                return (({commit, commit_and_ready_for_reveal, payout, reveal}) => {\n                    commit = new Date(this.hexToNumber(commit._hex) * 1000);\n                    commit_and_ready_for_reveal = new Date(this.hexToNumber(commit_and_ready_for_reveal._hex) * 1000);\n                    payout = new Date(this.hexToNumber(payout._hex) * 1000);\n                    reveal = new Date(this.hexToNumber(reveal._hex) * 1000);\n                    return {commit, commit_and_ready_for_reveal, payout, reveal}\n                })(res);\n            })\n    }\n\n    async getTimers() {\n        return await this.state.contract.methods\n            .getTimers()\n            .call({from: this.state.user})\n            .then(res => {\n                return (({LEFT_COMMIT_AND_REVEAL, TO_ABORT, WAIT_TO_GO_TO_REVEAL_PHASE, TO_REVEAL}) => {\n                    LEFT_COMMIT_AND_REVEAL = this.hexToNumber(LEFT_COMMIT_AND_REVEAL._hex);\n                    TO_ABORT = this.hexToNumber(TO_ABORT._hex) * 1000;\n                    WAIT_TO_GO_TO_REVEAL_PHASE = this.hexToNumber(WAIT_TO_GO_TO_REVEAL_PHASE._hex);\n                    TO_REVEAL = this.hexToNumber(TO_REVEAL._hex);\n                    return {LEFT_COMMIT_AND_REVEAL, TO_ABORT, WAIT_TO_GO_TO_REVEAL_PHASE, TO_REVEAL}\n                })(res);\n            })\n    }\n\n    hexToNumber(n) {\n        return this.state.web3.utils.hexToNumber(n);\n    }\n\n    hexToNumberString(n) {\n        return this.state.web3.utils.hexToNumberString(n);\n    }\n\n    async getFee() {\n        return await this.state.contract.methods\n            .getFee()\n            .call({from: this.state.user})\n            .then(res => {\n                return this.hexToNumberString(res._hex)\n            })\n    }\n\n    async loadDataFromSC() {\n        this.setState({\n            user: await this.getUser(),\n        });\n        this.setState({\n            timestamps: await this.getCurrentTimestamp(),\n            currentPhase: await this.getCurrentPhase(),\n            committed: await this.getCommitted(),\n            fee: await this.getFee(),\n            timers: await this.getTimers(),\n            hasCommitted: await this.hasCommitted(),\n        });\n        //await  this.getNumberOfPlayers();\n        //Load jackpot\n        //load time\n        //load numberofPlayers\n        //load entryFee\n    }\n\n    getCurrentPhase() {\n        return this.state.contract.methods\n            .current_phase()\n            .call({from: this.state.user})\n            .then(res => {\n                console.log(\"CURRENT PHASE\", res)\n                return res\n            })\n    }\n\n    transactionNotification(type, key, title, description) {\n        setTimeout(() => {\n            if (type === 'open') {\n                this.props.startValidating();\n                Notification.open({\n                    title,\n                    description,\n                    key,\n                    duration: 60000,\n                });\n            }\n            else if (type === 'success') {\n                this.props.stopValidating();\n                Notification.success({\n                    title,\n                    description,\n                    key,\n                    duration: 5000,\n                });\n            }\n            else if (type === 'error') {\n                this.props.stopValidating();\n                Notification.error({\n                    title,\n                    description,\n                    key,\n                    duration: 5000,\n                });\n            }\n            else if (type === 'close') {\n                Notification.remove(key)\n            }\n        })\n    }\n\n    getCommitted() {\n        return this.state.contract.methods\n            .getCommitted()\n            .call({from: this.state.user})\n            .then(res => {\n                return res.length\n            })\n    }\n\n    hasCommitted() {\n        return this.state.contract.methods\n            .user_committed()\n            .call({from: this.state.user})\n            .then(res => {\n                return res\n            })\n    }\n\n    getTimerForPhase(phase) {\n        switch (phase) {\n            case 0:\n                return this.state.timers['LEFT_COMMIT_AND_REVEAL'];\n            case 1:\n                return this.state.timers['WAIT_TO_GO_TO_REVEAL_PHASE'];\n            case 2:\n                return this.state.timers['TO_REVEAL'];\n            case 3:\n                return 'PAYOUT';\n        }\n    }\n\n    getPhaseForTimestamp(status) {\n        switch (status) {\n            case 0:\n                return 'commit';\n            case 1:\n                return 'commit_and_ready_for_reveal';\n            case 2:\n                return 'reveal';\n            case 3:\n                return 'payout';\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {this.props.isLoading ?\n                    (<Loader>\n                        <RingLoader\n                            sizeUnit={\"px\"}\n                            size={150}\n                            color={'orange'}\n                            loading={this.props.isLoading}/>\n                    </Loader>) : (\n                        <div>\n                            {this.props.isValidating ? (<LinearProgress style={{height: '5px'}}/>) : (\n                                <div style={{height: '5px'}}/>)}\n                            <div>\n                                <BrowserRouter>\n                                    <Header/>\n                                    <div id=\"style-7\" style={{overflowY: 'auto'}}>\n                                        <Routes state={this.state} cookies={this.props.cookies}\n                                                transactionNotification={(type, key, title, message) => this.transactionNotification(type, key, title, message)}\n                                                refreshOnModalClose = {()=> this.refreshOnModalClose()}/>\n                                    </div>\n                                    <Footer/>\n                                </BrowserRouter>\n                            </div>\n                        </div>\n                    )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        isLoading: state.ui.isLoading,\n        isValidating: state.ui.isValidating,\n    };\n};\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        startLoading: () => dispatch(uiStartLoading()),\n        stopLoading: () => dispatch(uiStopLoading()),\n        startValidating: () => dispatch(uiStartValidating()),\n        stopValidating: () => dispatch(uiStopValidating()),\n    }\n};\n\nexport default withCookies(withRouter(connect(mapStateToProps, mapActionsToProps)(App)));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {CookiesProvider} from \"react-cookie\";\nimport { Web3Provider } from 'react-web3';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Web3Provider>\n        <CookiesProvider>\n            <Provider store={store}>\n                <BrowserRouter>\n                    <App/>\n                </BrowserRouter>\n            </Provider>\n        </CookiesProvider>\n    </Web3Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/lotto.000a671d.png\";"],"sourceRoot":""}