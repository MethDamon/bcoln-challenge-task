{"version":3,"sources":["serviceWorker.js","store/reducers/uiReducer.js","store/actions/actionTypes.js","store/configureStore.js","views/Footer.js","store/actions/uiActionCreators.js","views/Header.js","views/GameStatusBadge.js","views/CurrentGame.js","const/GameStatus.js","components/Home.js","views/Slot.js","components/Lottery.js","components/Reveal.js","routes/index.jsx","App.js","index.js","assets/lotto.png"],"names":["Boolean","window","location","hostname","match","initialState","isLoading","isValidating","reducer","state","arguments","length","undefined","type","Object","objectSpread","rootReducer","combineReducers","ui","uiReducer","composeEnhancers","compose","addLoggingToDispatch","store","rawDispatch","dispatch","console","group","action","returnValue","groupEnd","Developer","styled","p","_templateObject","Title","_templateObject2","Container","div","_templateObject3","GithubLink","a","_templateObject4","connect","startLoading","stopLoading","react_default","createElement","href","target","lib","style","float","icon","size","HeaderContainer","Header_templateObject","Header_templateObject2","Header_GithubLink","styles","committed","background","color","readyForReveal","reveal","getStyle","status","GameStatusBadge","_ref","Panel","marginTop","boxShadow","width","PanelHeader","LotteryLogo","Info","fontWeight","CurrentGame","currentFee","t","nrOfPlayers","gameStatus","timeLeft","header","src","lotto","alt","views_GameStatusBadge","concat","Math","floor","GAME_STATUS","GAME_CREATED","GAME_JOINED","GAME_STARTED","0","1","2","JOINED_BET","PLACED_BET","WITHDRAWN_BET","web3","HomeContainer","display","flexDirection","alignItems","Inputs","marginBottom","LoginButton","height","fontSize","borderRadius","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","redirectToLottery","setState","props","history","push","views_CurrentGame","currentBet","fee","currentPhase","inside","Addon","defaultValue","user","disabled","fromWei","onClick","joinLottery","bind","Component","withRouter","contract","cookies","SlotStyle","Slot_templateObject","chosenNumbers","number","includes","_ref2","_ref3","hasCommitted","Slot","_ref4","callback","Buffer","require","justifyContent","CurrentGameContainer","TicketNumbers","flexWrap","Ticket","borderColor","betButton","abortRevealButton","clearButton","marginRight","buttonGroup","Lottery","counter","get","Date","commitTimestamps","toString","timestamps","remove","path","createTable","_this2","table","_loop","i","views_Slot","key","chooseNumber","n","_this3","numbers","assign","lastSelected","_this4","alert","sortedNumbers","sort","b","alloc","writeInt8","first_number","second_number","toHash","eth","abi","encodeParameters","log","hash","utils","soliditySha3","tx","random","methods","commit","send","from","value","on","transactionNotification","confirmationNumber","set","_this5","goToRevealPhase","_this6","reset","reload","_this7","react_router","to","bordered","Reveal_templateObject","Reveal_templateObject2","Reveal","tmp","abortCommitPhase","revealNumbers","revealButton","Routes","render","components_Home","components_Lottery","components_Reveal","Loader","App_templateObject","App","CONTRACT_ADDRESS","assertThisInitialized","web3Instance","Web3","currentProvider","givenProvider","networkVersion","DLottery","networks","address","dLotteryContract","Contract","timers","loadDataFromSC","getRemainingTime","events","NewCommit","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","NewReveal","_callee2","_context2","Reset","_callee3","_context3","PhaseChange","_callee4","_context4","LotteryEnded","_callee5","_context5","timer","setInterval","clearTimeout","startPhase","getPhaseForTimestamp","remainingTime","setSeconds","getSeconds","getTimerForPhase","now","getAccounts","then","addresses","catch","err","current_timestamps","res","_ref6","commit_and_ready_for_reveal","payout","hexToNumber","_hex","getTimers","_ref7","LEFT_COMMIT_AND_REVEAL","TO_ABORT","WAIT_TO_GO_TO_REVEAL_PHASE","TO_REVEAL","hexToNumberString","getFee","getUser","getCurrentTimestamp","getCurrentPhase","getCommitted","current_phase","title","description","setTimeout","startValidating","Notification","open","duration","stopValidating","success","error","user_committed","phase","className","RingLoader_default","sizeUnit","loading","LinearProgress_default","react_router_dom","views_Header","id","overflowY","routes","message","views_Footer","withCookies","createStore","applyMiddleware","thunk","configureStore","ReactDOM","dist","es6","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.18b8e40f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    UI_START_LOADING_ACTION,\n    UI_STOP_LOADING_ACTION,\n    UI_START_VALIDATING_ACTION,\n    UI_STOP_VALIDATING_ACTION\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n    isLoading: true,\n    isValidating: false,\n};\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UI_START_LOADING_ACTION:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case UI_STOP_LOADING_ACTION:\n            return {\n                ...state,\n                isLoading: false\n            };\n        case UI_START_VALIDATING_ACTION:\n            return {\n                ...state,\n                isValidating: true\n            };\n        case UI_STOP_VALIDATING_ACTION:\n            return {\n                ...state,\n                isValidating: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","export const UI_START_LOADING_ACTION = 'UI_START_LOADING_ACTION';\nexport const UI_STOP_LOADING_ACTION = 'UI_STOP_LOADING_ACTION';\nexport const UI_START_VALIDATING_ACTION = 'UI_START_VALIDATING_ACTION';\nexport const UI_STOP_VALIDATING_ACTION = 'UI_STOP_VALIDATING_ACTION';","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport uiReducer from './reducers/uiReducer';\n\nconst rootReducer = combineReducers({\n    ui: uiReducer,\n});\n\nlet composeEnhancers = compose;\n\nconst addLoggingToDispatch = store => {\n    const rawDispatch = store.dispatch;\n\n    if (!console.group) {\n        return rawDispatch;\n    }\n\n    return action => {\n        console.group(\"Return action from configure store: \", action.type);\n        // console.log(\"%c prev state\", \"color: gray\", store.getState());\n        // console.log(\"%c action\", \"color: blue\", action);\n        const returnValue = rawDispatch(action);\n        // console.log(\"%c next state\", \"color: green\", store.getState());\n        console.groupEnd(action.type);\n\n        return returnValue;\n    };\n};\n\nexport default function configureStore() {\n    const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n    store.dispatch = addLoggingToDispatch(store);\n    return store;\n}","import React from 'react';\nimport {connect} from 'react-redux'\nimport 'rsuite/dist/styles/rsuite.min.css';\nimport {uiStartLoading, uiStopLoading} from '../store/actions/uiActionCreators';\nimport styled from 'styled-components'\nimport {Icon} from \"rsuite\";\n\nconst Developer = styled.p`\n    position: fixed,\n  margin-top: 5px;\n  display: flex;\n  justify-content: center\n`;\n\nconst Title = styled.p`\n  margin-bottom: 0;\n  font-size: 18px;\n  font-weight: bolds\n`;\n\nconst Container = styled.div`\n  color: white;\n`;\nconst GithubLink = styled.a`\n  color: white;\n  margin 0 0 0 5px;\n`;\nconst Footer = () => (\n    <Container>\n        <Title>\n            Developed by:{' '}\n        </Title>\n        <Developer >Ile Cepilov\n            <GithubLink href=\"https://github.com/ilecipi\" target=\"_blank\" >\n                <Icon style={{float: 'right'}} icon=\"github\" size='lg'/>\n            </GithubLink></Developer>\n        <Developer>Elfat Esati</Developer>\n        <Developer>Tim Strasser\n            <GithubLink href=\"https://github.com/MethDamon\" target=\"_blank\" >\n                <Icon style={{float: 'right'}} icon=\"github\" size='lg'/>\n            </GithubLink></Developer>\n        <Developer>Erion Sula\n            <GithubLink href=\"https://github.com/sulasdeli\" target=\"_blank\" >\n                <Icon style={{float: 'right'}} icon=\"github\" size='lg'/>\n            </GithubLink></Developer>\n        <Developer>Ledri Thaqi</Developer>\n    </Container>\n);\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoading: state.ui.isLoading,\n    };\n};\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        startLoading: ()=>dispatch(uiStartLoading()),\n        stopLoading: ()=>dispatch(uiStopLoading()),\n    }\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Footer);\n","import {\n    UI_START_LOADING_ACTION,\n    UI_STOP_LOADING_ACTION,\n    UI_START_VALIDATING_ACTION,\n    UI_STOP_VALIDATING_ACTION\n} from \"./actionTypes\";\n\nexport const uiStartLoading = () => {\n    return {\n        type: UI_START_LOADING_ACTION\n    };\n};\n\n\nexport const uiStopLoading = () => {\n    return {\n        type: UI_STOP_LOADING_ACTION\n    };\n};\n\nexport const uiStartValidating = () => {\n    return {\n        type: UI_START_VALIDATING_ACTION\n    };\n};\n\nexport const uiStopValidating = () => {\n    return {\n        type: UI_STOP_VALIDATING_ACTION\n    };\n};","import React from 'react';\nimport {connect} from 'react-redux'\nimport 'rsuite/dist/styles/rsuite.min.css'; // or 'rsuite/dist/styles/rsuite.min.css'\nimport {uiStartLoading, uiStopLoading} from '../store/actions/uiActionCreators';\nimport styled from 'styled-components'\nimport {Icon} from \"rsuite\";\n\nconst HeaderContainer = styled.div`\n  font-size: 18px;\n  padding: 16px;\n  height: 50px;\n`;\n\nconst GithubLink = styled.a`\n  color: white;\n`;\nconst Header = () => (\n    <HeaderContainer>\n        <GithubLink href=\"https://github.com/MethDamon/bcoln-challenge-task\" target=\"_blank\" >\n            <Icon style={{float: 'left'}} icon=\"github\" size='lg'/>\n        </GithubLink>\n    </HeaderContainer>\n);\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoading: state.ui.isLoading,\n    };\n};\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        startLoading: ()=>dispatch(uiStartLoading()),\n        stopLoading: ()=>dispatch(uiStopLoading()),\n    }\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(Header);\n","import React from \"react\";\nimport {Tag} from \"rsuite\";\n\nconst styles = {\n    committed: {\n        background: \"linear-gradient(60deg, #66bb6a, #43a047)\",\n        color: \"white\"\n    },\n    readyForReveal: {\n        background: 'linear-gradient(60deg, #ffa726, #fb8c00)',\n        color: \"white\"\n    },\n    reveal: {\n        background: \"linear-gradient(60deg, #ef5350, #e53935)\",\n        color: \"white\"\n    }\n};\n\nconst GameStatusBadge = ({status}) =>(\n    <Tag style={getStyle(status)}>{status}</Tag>\n);\n\nconst getStyle = (status) => {\n    return status === 'COMMITTED' ? styles.committed : status === 'READY FOR REVEAL' ? styles.readyForReveal: styles.reveal\n};\n\nexport default GameStatusBadge","import React from 'react';\nimport { Panel } from 'rsuite';\nimport lotto from '../assets/lotto.png'\nimport GameStatusBadge from \"./GameStatusBadge\";\n\nconst styles = {\n    Panel: {\n        marginTop: \"5px\",\n        background: 'linear-gradient(0deg, #11cdef 0,#1171ef 100%)',\n        color: \"white\",\n        boxShadow: \"0 1px 3px 0 rgba(0,0,0,.5)\",\n        width: 450,\n    },\n    PanelHeader: {\n        color: \"white\"\n    },\n    LotteryLogo: {\n      width: '55px',\n    },\n    Info: {\n        fontWeight: \"bold\"\n    }\n};\n\nconst CurrentGame = ({currentFee, nrOfPlayers, gameStatus, timeLeft}) =>{\n    return(\n        <Panel header={<img style={styles.LotteryLogo} src={lotto} alt=\"Logo\" />} style={styles.Panel}>\n\n            <h4 style={styles.Info}>Current Number Of Players: {nrOfPlayers}</h4>\n            {/*<div style={styles.Info}>Current Fee: {currentFee} WEI</div>*/}\n            <h4 style={styles.Info}>Lottery Status: <GameStatusBadge status={gameStatus}/></h4>\n            <h4 style={styles.Info}>Time left: {getTimeString(timeLeft)}</h4>\n        </Panel>\n    );\n};\n\nfunction getTimeString(t){\n    return `${Math.floor((t % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))}:${Math.floor((t % (1000 * 60 * 60)) / (1000 * 60))}:${Math.floor((t % (1000 * 60)) / 1000)}`\n}\n\nexport default CurrentGame;","const GAME_STATUS = {\n    GAME_CREATED: 'CREATE GAME',\n    GAME_JOINED: 'JOIN GAME',\n    GAME_STARTED: 'START GAME',\n    0: 'COMMITTED',\n    1: 'READY FOR REVEAL',\n    2: 'REVEAL PHASE',\n    JOINED_BET: 'JOIN BET',\n    PLACED_BET: 'PLACE BET',\n    WITHDRAWN_BET: 'WITHDRAW BET'\n};\n\nexport default GAME_STATUS;","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {Button, Panel} from 'rsuite';\nimport 'rsuite/dist/styles/rsuite.min.css';\nimport {Input, InputGroup, Icon} from 'rsuite';\nimport CurrentGame from '../views/CurrentGame'\nimport GAME_STATUS from '../const/GameStatus';\nimport {uiStartLoading, uiStopLoading} from '../store/actions/uiActionCreators';\nimport { withRouter, Redirect } from 'react-router-dom'\n\nlet web3 = window.web3;\n\nconst styles = {\n    HomeContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    Container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        background: \"white\",\n        width: 600\n    },\n    Inputs: {\n        width: 450,\n        marginBottom: 10,\n        marginTop: 20,\n    },\n    LoginButton: {\n        width: 250,\n        height: 50,\n        marginBottom: 10,\n        marginTop: 10,\n        fontSize: 20,\n        fontWeight: 800,\n        background: \"linear-gradient(0deg, #ffa726, #fb8c00)\",\n        color: \"#FFFFFF\",\n        boxShadow: \"0 1px 3px 0 rgba(0,0,0,.29)\"\n    },\n    CurrentGame: {\n        width: 500,\n        marginTop: 20,\n        marginBottom: 100,\n        borderRadius: 7,\n        fontSize: 30\n    }\n};\n\nclass Home extends Component {\n\n    constructor() {\n       super();\n        this.state = {\n            redirectToLottery: false,\n        }\n    }\n\n    joinLottery(){\n        this.setState({redirectToLottery: true})\n        this.props.history.push('/lottery')\n\n    }\n\n    render() {\n        return(\n            <div style={{height:'70vh'}}>\n            <Panel style={styles.HomeContainer}>\n                <Panel style={styles.Container}>\n                    < CurrentGame style={styles.CurrentGame}\n                                  nrOfPlayers={this.props.committed}\n                                  currentBet={this.props.fee}\n                                  gameStatus={GAME_STATUS[this.props.currentPhase]}\n                                  timeLeft={this.props.timeLeft}\n                    />\n                    <InputGroup inside style={styles.Inputs}>\n                        <InputGroup.Addon>\n                            <Icon icon=\"avatar\"/>\n                        </InputGroup.Addon>\n                        <Input  size = {'lg'} defaultValue = {this.props.user}\n                                disabled = {true}/>\n                    </InputGroup>\n\n                    <InputGroup style={styles.Inputs}>\n                        <InputGroup.Addon>ETH Fee</InputGroup.Addon>\n                        <Input size={'lg'}\n                               defaultValue = {web3.fromWei(this.props.fee, 'ether')}\n                               disabled = {true}\n                        />\n                    </InputGroup>\n                    <Button style={styles.LoginButton}\n                            onClick={this.joinLottery.bind(this)}>\n                        Join the Lottery\n                    </Button>\n                </Panel>\n            </Panel>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, {user, committed, currentPhase, fee, web3, contract, cookies, timeLeft}) => {\n    return {\n        isLoading: state.ui.isLoading,\n        user,\n        committed,\n        currentPhase,\n        fee,\n        web3,\n        contract,\n        cookies,\n        timeLeft\n    };\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        startLoading: ()=>dispatch(uiStartLoading()),\n        stopLoading: ()=>dispatch(uiStopLoading()),\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Home));\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst SlotStyle = styled.div`\n  display: flex;\n  text-transform: uppercase;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  color: ${({chosenNumbers, number}) => (chosenNumbers.includes(number) ? \"white\" : \"black\")} ;\n  //background: #f0cb35; /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n  background: ${({chosenNumbers, number}) => (chosenNumbers.includes(number) ? \"linear-gradient(45deg,#f9b18e,#EA5455 100%)\" : \"#ffffff\")} ;\n  margin: 3px;\n  height: 60px;\n  width: 60px;\n  font-size: 20px;\n  border-radius: 100%;\n  border-color: black;\n  \n:hover {\n    transition: all 0.4s ease 0s;\n    cursor: ${({hasCommitted}) => (hasCommitted ? \"default\" : \"pointer\")};\n}`;\n\nconst Slot = ({number, chosenNumbers, callback, hasCommitted}) => {\n    return (\n        <SlotStyle onClick={callback} chosenNumbers={chosenNumbers} number={number} hasCommitted = {hasCommitted}>\n            {number}\n        </SlotStyle>\n    );\n};\n\nexport default Slot;","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {Button, Icon, Panel} from 'rsuite';\nimport 'rsuite/dist/styles/rsuite.min.css';\nimport CurrentGame from '../views/CurrentGame'\nimport GAME_STATUS from '../const/GameStatus';\nimport {uiStartLoading, uiStopLoading} from '../store/actions/uiActionCreators';\nimport {withRouter, Redirect} from 'react-router-dom';\nimport Slot from \"../views/Slot\";\n\nconst Buffer = require('buffer/').Buffer;\n\nconst styles = {\n    HomeContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    Container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        background: \"white\",\n        width: 600\n    },\n    CurrentGameContainer: {\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    TicketNumbers: {\n        width: 550,\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: \"white\",\n        flexWrap: \"wrap\"\n    },\n    Ticket: {\n        marginTop: 20,\n        width: 550,\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\",\n        borderColor: \"#afafaf\"\n    },\n    betButton: {\n        width: 250,\n        height: 50,\n        marginBottom: 10,\n        marginTop: 10,\n        fontSize: 20,\n        fontWeight: 800,\n        color: \"#FFFFFF\",\n        boxShadow: \"0 1px 3px 0 rgba(0,0,0,.29)\"\n    },\n    abortRevealButton: {\n        width: 250,\n        height: 50,\n        marginBottom: 10,\n        marginTop: 10,\n        fontSize: 20,\n        fontWeight: 800,\n        background: \"linear-gradient(0deg, #ef5350, #e53935)\",\n        color: \"#FFFFFF\",\n        boxShadow: \"0 1px 3px 0 rgba(0,0,0,.29)\"\n    },\n    clearButton: {\n        float: \"right\",\n        marginRight: 15,\n        marginTop: 15,\n        marginBottom: -15,\n        fontSize: 20,\n        fontWeight: 800,\n    },\n    buttonGroup: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginTop: 15\n    },\n};\n\nclass Lottery extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            chosenNumbers: [-1, -1],\n            counter: 0,\n        }\n    }\n\n\n    async componentDidMount() {\n        let chosenNumbers = await this.props.cookies.get('chosenNumbers');\n        let commitTimestamps = new Date(await this.props.cookies.get('commitTimestamp'));\n        if (!!chosenNumbers && commitTimestamps.toString() === this.props.timestamps['commit'].toString()) {\n            this.setState({\n                chosenNumbers\n            })\n        } else {\n            this.props.cookies.remove('chosenNumbers', {path: '/'});\n            this.props.cookies.remove('commitTimestamp', {path: '/'});\n\n        }\n        this.createTable();\n    }\n\n    createTable() {\n        let table = [];\n        for (let i = 0; i < 16; i++) {\n            table.push(<Slot key={i} number={i + 1} chosenNumbers={this.state.chosenNumbers} callback={() => {\n                this.chooseNumber(i + 1)\n            }}/>)\n        }\n        this.setState({table})\n    }\n\n    chooseNumber(n) {\n        if(this.props.hasCommitted) return;\n        let numbers = Object.assign([], this.state.chosenNumbers);\n        let table = Object.assign([], this.state.table);\n\n        //Avoid choosing twice the same number\n        if (!numbers.includes(n)) {\n            let lastSelected = this.state.chosenNumbers[(this.state.counter) % 2];\n            numbers[this.state.counter % 2] = n;\n\n            //update the numbers which are no longer selected\n            if (lastSelected > 0) {\n                table[lastSelected - 1] = (\n                    <Slot key={lastSelected - 1} number={lastSelected} chosenNumbers={numbers} hasCommitted = {this.props.hasCommitted} callback={() => {\n                        this.chooseNumber(lastSelected)\n                    }}/>\n                );\n            }\n            //update the selected number\n            table[n - 1] = (\n                <Slot key={n - 1} number={n} chosenNumbers={numbers} callback={() => {\n                    this.chooseNumber(n);\n                }}/>\n            );\n            this.setState({\n                table,\n                chosenNumbers: numbers,\n                counter: this.state.counter + 1\n            });\n        }\n    }\n\n    joinLottery() {\n        if (!this.state.chosenNumbers.includes(-1)) {\n            let sortedNumbers = Object.assign([], this.state.chosenNumbers);\n            sortedNumbers = sortedNumbers.sort((a, b) => {\n                return a - b\n            });\n            //TODO. fix the hash\n            let n1 = new Buffer.alloc(1);\n            n1.writeInt8(sortedNumbers[0]);\n            let n2 = new Buffer.alloc(1);\n            n2.writeInt8(sortedNumbers[1]);\n            //let addressedHash = this.props.web3.utils.sha3(this.props.user);\n            //let toHash = Buffer.concat([n1, Buffer.from(addressedHash), n2]);\n            let first_number = sortedNumbers[0];\n            let second_number = sortedNumbers[1];\n            let toHash = this.props.web3.eth.abi.encodeParameters(['uint8', 'address', 'uint8'], [first_number, this.props.user, second_number]);\n            console.log('hash input', toHash);\n            let hash = this.props.web3.utils.soliditySha3(toHash);\n            console.log('hash output', hash);\n            let tx = Math.random()*10000;\n            this.props.contract.methods\n                .commit(hash)\n                .send({from: this.props.user, value: this.props.fee}, )\n                .on('transactionHash',()=>{\n                    this.props.transactionNotification('open', tx,'Transaction Sent', 'Your transaction is being validated...');\n                })\n                .on('confirmation',(confirmationNumber)=>{\n                    if(confirmationNumber===1){\n                        this.props.cookies.set('chosenNumbers', this.state.chosenNumbers, {path: '/'});\n                        //save the timestamp of the commit phase and used it as id for saving only the numbers\n                        //of the current lottery\n                        this.props.cookies.set('commitTimestamp', this.props.timestamps['commit'], {path: '/'});\n                        this.props.transactionNotification('close',tx);\n                        this.props.transactionNotification('success', Math.random()*10000,'Transaction Validated','Your transaction has been validated');\n                    }\n                });\n        } else {\n            alert(\"NUMBERS NOT CHOSEN\")\n        }\n    }\n\n    goToRevealPhase() {\n        let tx = Math.random()*10000;\n        this.props.contract.methods\n            .goToRevealPhase()\n            .send({from: this.props.user, value: this.props.fee})\n            .on('transactionHash',()=>{\n                this.props.transactionNotification('open', tx,'Transaction Sent', 'Your transaction is being validated...');\n            })\n            .on('confirmation',(confirmationNumber)=>{\n                if(confirmationNumber===1){\n                    this.props.transactionNotification('close',tx);\n                    this.props.transactionNotification('success', Math.random()*10000,'Transaction Validated','Your transaction has been validated');\n                }\n            });\n    }\n\n    reset() {\n        this.props.contract.methods\n            .reset()\n            .send({ from: this.props.user }, () => {\n                window.location.reload();\n                // type Config{\n                //     title:string,\n                //         description:React.ElementType,\n                //         duration?:number,\n                //         placement?:string,\n                //         top?:number,\n                //         bottom?:number,\n                //         onClose?:()=>void,\n                //         style?:Object,\n                //         key?:string\n                // }\n                let tx = Math.random() * 10000;\n                this.props.contract.methods\n                    .reset()\n                    .send({ from: this.props.user })\n                    .on('transactionHash', () => {\n                        this.props.transactionNotification('open', tx, 'Transaction Sent', 'Your transaction is being validated...');\n                    })\n                    .on('confirmation', (confirmationNumber) => {\n                        if (confirmationNumber === 1) {\n                            this.props.transactionNotification('close', tx);\n                            this.props.transactionNotification('success', Math.random() * 10000, 'Transaction Validated', 'Your transaction has been validated');\n                        }\n                    });\n            });\n    }\n\n    render() {\n        if (GAME_STATUS[this.props.currentPhase] === GAME_STATUS[2]) {\n            return (<Redirect to=\"/reveal\"/>)\n        }\n        return (\n            <div style={{height:'70vh'}}>\n            <Panel style={styles.HomeContainer}>\n                <Panel style={styles.Container}>\n                    <div style={styles.CurrentGameContainer}>\n                        <CurrentGame\n                            nrOfPlayers={this.props.committed}\n                            currentBet={this.props.fee}\n                            gameStatus={GAME_STATUS[this.props.currentPhase]}\n                            timeLeft={this.props.timeLeft}\n                        />\n                    </div>\n                    <div style={styles.CurrentGameContainer}>\n                        <Panel style={styles.Ticket}\n                               header={<h3 style={{fontWeight: \"bold\", color: \"#4e4e4e\"}}>Lottery Ticket</h3>} bordered>\n                            <div style={styles.TicketNumbers}>\n                                {this.state.table}\n                            </div>\n                        </Panel>\n                    </div>\n                    <div style={styles.buttonGroup}>\n                        <Button style={styles.abortRevealButton}\n                                onClick={() => {\n                                    this.reset()\n                                }\n                                }>\n                            Abort Commit Phase\n                        </Button>\n                        {GAME_STATUS[this.props.currentPhase] == GAME_STATUS[1] &&\n                        this.props.timeLeft === 0 ? (\n                            <Button style={styles.abortRevealButton}\n                                    onClick={() => {\n                                        this.goToRevealPhase()\n                                    }\n                                    }>\n                                {'Go to reveal phase'}\n                            </Button>\n                        ) : (\n                            <Button color=\"green\"\n                                    style={styles.betButton}\n                                    disabled={this.state.chosenNumbers.includes(-1)||this.props.hasCommitted}\n                                    onClick={() => {\n                                        this.joinLottery()\n                                    }\n                                    }>\n                                Buy\n                            </Button>)}\n                    </div>\n                </Panel>\n            </Panel>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, {user, committed, currentPhase, fee, web3, contract, cookies, timeLeft, timestamps, hasCommitted,transactionNotification}) => {\n    return {\n        isLoading: state.ui.isLoading,\n        user,\n        committed,\n        currentPhase,\n        fee,\n        web3,\n        contract,\n        cookies,\n        timeLeft,\n        timestamps,\n        hasCommitted,\n        transactionNotification\n    };\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        startLoading: () => dispatch(uiStartLoading()),\n        stopLoading: () => dispatch(uiStopLoading()),\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Lottery));\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {Button, Panel} from 'rsuite';\nimport 'rsuite/dist/styles/rsuite.min.css'; // or 'rsuite/dist/styles/rsuite.min.css'\nimport styled from 'styled-components';\nimport {css} from '@emotion/core';\nimport {Input, InputGroup, Icon} from 'rsuite';\nimport CurrentGame from '../views/CurrentGame'\nimport GAME_STATUS from '../const/GameStatus';\nimport {uiStartLoading, uiStopLoading} from '../store/actions/uiActionCreators';\nimport RingLoader from 'react-spinners/RingLoader';\nimport {withRouter, Redirect} from 'react-router-dom';\n\nimport Slot from \"../views/Slot\";\n\nconst Table = styled.div`\nwidth: 550px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  flex-wrap: wrap;\n`;\n\nconst Container = styled.div`\n  height: 70vh\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  flex-wrap: wrap;\n`;\n\nconst stylesCurrentGame = {\n    width: 500,\n    marginTop: 20,\n    marginBottom: 100,\n    borderRadius: 7,\n    fontSize: 30\n};\nconst styles = {\n    HomeContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    Container: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        background: \"white\",\n        width: 600\n    },\n    CurrentGameContainer: {\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    TicketNumbers: {\n        width: 550,\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: \"white\",\n        flexWrap: \"wrap\"\n    },\n    Ticket: {\n        marginTop: 20,\n        width: 550,\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\",\n        borderColor: \"#afafaf\"\n    },\n    betButton: {\n        width: 250,\n        height: 50,\n        marginBottom: 10,\n        marginTop: 10,\n        fontSize: 20,\n        fontWeight: 800,\n        color: \"#FFFFFF\",\n        boxShadow: \"0 1px 3px 0 rgba(0,0,0,.29)\"\n    },\n    abortRevealButton: {\n        width: 250,\n        height: 50,\n        marginBottom: 10,\n        marginTop: 10,\n        fontSize: 20,\n        fontWeight: 800,\n        background: \"linear-gradient(0deg, #ef5350, #e53935)\",\n        color: \"#FFFFFF\",\n        boxShadow: \"0 1px 3px 0 rgba(0,0,0,.29)\"\n    },\n    clearButton: {\n        float: \"right\",\n        marginRight: 15,\n        marginTop: 15,\n        marginBottom: -15,\n        fontSize: 20,\n        fontWeight: 800,\n    },\n    buttonGroup: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginTop: 15\n    },\n};\n\nconst betButtonStyle = {\n    width: 250,\n    height: 50,\n    margin: 10,\n    fontSize: 20,\n    fontWeight: 800\n}\n\n\nclass Reveal extends Component {\n    async componentDidMount() {\n        let chosenNumbers = await this.props.cookies.get('chosenNumbers');\n        let commitTimestamps = new Date(await this.props.cookies.get('commitTimestamp'));\n        if(!!chosenNumbers&&commitTimestamps.toString()===this.props.timestamps['commit'].toString()){\n            this.setState({\n                chosenNumbers\n            })\n        }else{\n            this.props.cookies.remove('chosenNumbers',{ path: '/' });\n            this.props.cookies.remove('commitTimestamp', { path: '/' });\n\n        }\n        this.createTable()\n    }\n\n    createTable() {\n        let table = [];\n        for (let i = 0; i < 16; i++) {\n            table.push(<Slot key={i} number={i + 1} chosenNumbers={this.state.chosenNumbers} callback={() => {\n                this.chooseNumber(i + 1)\n            }}/>)\n        }\n        this.setState({table})\n    }\n\n    chooseNumber(n) {\n        let numbers = Object.assign([], this.state.chosenNumbers);\n        let table = Object.assign([], this.state.table);\n        //Avoid choosing twice the same number\n        if (!numbers.includes(n)) {\n            let lastSelected = this.state.chosenNumbers[(this.state.counter) % 2];\n            numbers[this.state.counter % 2] = n;\n\n            //update the numbers which are no longer selected\n            if (lastSelected > 0) {\n                table[lastSelected - 1] = (\n                    <Slot key={lastSelected - 1} number={lastSelected} chosenNumbers={numbers} callback={() => {\n                        this.chooseNumber(lastSelected)\n                    }}/>\n                );\n            }\n            //update the selected number\n            table[n - 1] = (\n                <Slot key={n - 1} number={n} chosenNumbers={numbers} callback={() => {\n                    this.chooseNumber(n);\n                }}/>\n            );\n            this.setState({\n                table,\n                chosenNumbers: numbers,\n                counter: this.state.counter + 1\n            });\n        }\n    }\n\n    revealNumbers() {\n        if (!this.state.chosenNumbers.includes(-1)) {\n            let sortedNumbers = Object.assign([], this.state.chosenNumbers);\n            sortedNumbers = sortedNumbers.sort((a, b) => {\n                return a - b\n            });\n            let tx = Math.random()*10000;\n            this.props.contract.methods\n                .reveal(sortedNumbers[0], sortedNumbers[1])\n                .send({from: this.props.user, value: this.props.fee})\n                .on('transactionHash',()=>{\n                    this.props.transactionNotification('open', tx,'Transaction Sent', 'Your transaction is being validated...');\n                })\n                .on('confirmation',(confirmationNumber)=>{\n                    if(confirmationNumber===1){\n                        this.props.transactionNotification('close',tx);\n                        this.props.transactionNotification('success', Math.random()*10000,'Transaction Validated','Your transaction has been validated');\n                    }\n                });\n        } else {\n            alert(\"NUMBERS NOT CHOSEN\")\n        }\n\n\n    }\n\n    constructor() {\n        super();\n        this.state = {\n            chosenNumbers: [-1, -1],\n            counter: 0,\n        }\n    }\n\n    revealButton() {\n        let tmp = Object.assign([], this.state.chosenNumbers);\n        tmp = tmp.sort((a, b) => {\n            return a - b\n        });\n        if (tmp.includes(-1)) {\n            return \"Re-select your numbers\";\n        } else {\n            return `Reveal your numbers: ${tmp[0]}, ${tmp[1]}`;\n        }\n    }\n\n    abortCommitPhase() {\n        let tx = Math.random()*10000;\n        this.props.contract.methods\n            .reset()\n            .send({from: this.props.user})\n            .on('transactionHash',()=>{\n                this.props.transactionNotification('open', tx,'Transaction Sent', 'Your transaction is being validated...');\n            })\n            .on('confirmation',(confirmationNumber)=>{\n                if(confirmationNumber===1){\n                    this.props.transactionNotification('close',tx);\n                    this.props.transactionNotification('success', Math.random()*10000,'Transaction Validated','Your transaction has been validated');\n                }\n            });\n    }\n\n\n    render() {\n        if (GAME_STATUS[this.props.currentPhase] === GAME_STATUS[0]||GAME_STATUS[this.props.currentPhase] === GAME_STATUS[1]) {\n            return (<Redirect to=\"/lottery\"/>)\n        }\n        return (\n            <div style={{height:'70vh'}}>\n                <Panel style={styles.HomeContainer}>\n                    <Panel style={styles.Container}>\n                <div style={styles.CurrentGameContainer}>\n                < CurrentGame nrOfPlayers={this.props.committed}\n                              currentBet={this.props.fee}\n                              gameStatus={GAME_STATUS[this.props.currentPhase]}\n                              timeLeft={this.props.timeLeft}\n                />\n                </div>\n                <div style={styles.CurrentGameContainer}>\n                    <Panel style={styles.Ticket}\n                           header={<h3 style={{fontWeight: \"bold\", color: \"#4e4e4e\"}}>Lottery Ticket</h3>} bordered>\n                        <div style={styles.TicketNumbers}>\n                            {this.state.table}\n                        </div>\n                    </Panel>\n                </div>\n                <div style={styles.buttonGroup}>\n                    <Button style={styles.abortRevealButton}\n                            onClick={() => {\n                                this.abortCommitPhase()\n                            }\n                            }\n                    >\n                        Abort Commit Phase\n                    </Button>\n                <Button style={styles.betButton}\n                        color=\"green\"\n                        disabled={this.state.chosenNumbers.includes(-1)}\n                        onClick={() => {\n                            this.revealNumbers()\n                        }\n                        }\n                >\n                    {this.revealButton()}\n                </Button>\n                </div>\n\n                    </Panel>\n                </Panel>\n            </div>\n        );\n    }\n}\n\n// const props = ({user})=>{\n//     return {user}\n// }\n\nconst mapStateToProps = (state, {user, committed, currentPhase, fee, web3, contract, cookies, timeLeft, timestamps}) => {\n    return {\n        isLoading: state.ui.isLoading,\n        user,\n        committed,\n        currentPhase,\n        fee,\n        web3,\n        contract,\n        cookies,\n        timeLeft,\n        timestamps\n    };\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        startLoading: () => dispatch(uiStartLoading()),\n        stopLoading: () => dispatch(uiStopLoading()),\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Reveal));\n","import {Route, Switch, Redirect} from \"react-router-dom\";\n\nimport React from \"react\";\nimport Home from \"../components/Home\";\nimport Lottery from \"../components/Lottery\";\nimport Reveal from \"../components/Reveal\";\n\nconst Routes = ({state, cookies, transactionNotification}) => (\n    <Switch>\n        <Route path=\"/join\" render={(props) => (\n            <Home {...props}\n                  user={state.user}\n                  committed={state.committed}\n                  currentPhase={state.currentPhase}\n                  fee={state.fee}\n                  contract={state.contract}\n                  web3={state.web3}\n                  cookies={cookies}\n                  timeLeft={state.timeLeft}\n                  hasCommitted={state.hasCommitted}\n                  transactionNotification={transactionNotification}/>)\n        }/>\n        <Route path=\"/lottery\" render={(props) => (\n            <Lottery {...props}\n                     user={state.user}\n                     committed={state.committed}\n                     currentPhase={state.currentPhase}\n                     fee={state.fee}\n                     contract={state.contract}\n                     web3={state.web3}\n                     cookies={cookies}\n                     timeLeft={state.timeLeft}\n                     timestamps = {state.timestamps}\n                     hasCommitted={state.hasCommitted}\n                     transactionNotification={transactionNotification}/>\n        )\n        }/>\n        <Route path=\"/reveal\" render={(props) => (\n            <Reveal {...props}\n                    user={state.user}\n                    committed={state.committed}\n                    currentPhase={state.currentPhase}\n                    fee={state.fee}\n                    contract={state.contract}\n                    web3={state.web3}\n                    cookies={cookies}\n                    timeLeft={state.timeLeft}\n                    timestamps = {state.timestamps}\n                    hasCommitted={state.hasCommitted}\n                    transactionNotification={transactionNotification}/>\n        )\n        }/>\n        <Redirect from='/*' to='/join' />\n    </Switch>\n);\n\nexport default Routes","import React, {Component} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom'\nimport Web3 from \"web3\";\nimport Footer from \"./views/Footer\";\nimport Header from \"./views/Header\";\nimport RingLoader from 'react-spinners/RingLoader';\nimport styled from \"styled-components\";\nimport './App.css';\nimport {uiStartLoading, uiStartValidating, uiStopLoading, uiStopValidating} from \"./store/actions/uiActionCreators\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {withCookies} from \"react-cookie\"\nimport DLottery from \"./build/contracts/DLottery\"\nimport Routes from './routes/index'\nimport {Notification} from \"rsuite\";\nimport LinearProgress from \"@material-ui/core/LinearProgress/LinearProgress\";\n\nlet web3 = window.web3;\n\nconst Loader = styled.div`\n    height: 70vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    border-color: red;\n`;\n\nclass App extends Component {\n\n    constructor() {\n        super();\n        this.transactionNotification = this.transactionNotification.bind(this);\n        let CONTRACT_ADDRESS;\n        let web3Instance = null;\n\n        if (typeof  web3 !== 'undefined') {\n            web3Instance = new Web3(web3.currentProvider);\n            if(web3Instance.givenProvider.networkVersion)\n                CONTRACT_ADDRESS = DLottery.networks[web3Instance.givenProvider.networkVersion].address;\n            else\n            // NetworkVersion = 3 (Ropsten) / 5777 (Ganache)\n                CONTRACT_ADDRESS = DLottery.networks[\"3\"].address\n        } else {\n            alert('Please install a Web3 Provider (Metamask)')\n        }\n\n        const dLotteryContract = new web3Instance.eth.Contract(\n            DLottery.abi,\n            CONTRACT_ADDRESS\n        );\n\n        this.state = {\n            isLoading: true,\n            web3: web3Instance,\n            contract: dLotteryContract,\n            user: '',\n            timestamps: {},\n            committed: 0,\n            currentPhase: '',\n            fee: 0,\n            timers:{},\n            timeLeft:-1,\n            hasCommitted: false,\n        }\n    }\n\n    async componentDidMount() {\n        //TODO: get the other variables required\n        await this.loadDataFromSC();\n        this.getRemainingTime();\n        this.props.stopLoading();\n        //this.setState({isLoading: false})\n        const commitEvent = this.state.contract.events.NewCommit();\n        commitEvent.on('data', async () => {\n            console.log(\"new event\");\n            //TODO: load only the new committed players?\n            await this.loadDataFromSC();\n        });\n        //TEST TODO: reload only necessary data\n        const revealEvent = this.state.contract.events.NewReveal();\n        revealEvent.on('data', async () => {\n            console.log(\"new event\");\n            //TODO: load only the new committed players?\n            await this.loadDataFromSC();\n        });\n\n        const resetEvent = this.state.contract.events.Reset();\n        resetEvent.on('data', async () => {\n            console.log(\"new event\");\n            //TODO: load only the new committed players?\n            await this.loadDataFromSC();\n        });\n\n        const phaseChangeEvent = this.state.contract.events.PhaseChange();\n        phaseChangeEvent.on('data', async () => {\n            console.log(\"new event\");\n            //TODO: load only the new committed players?\n            await this.loadDataFromSC();\n        });\n\n        const lotteryEndedEvent = this.state.contract.events.LotteryEnded();\n        lotteryEndedEvent.on('data', async () => {\n            console.log(\"new event\");\n            //TODO: load only the new committed players?\n            await this.loadDataFromSC();\n        });\n\n\n        this.timer = setInterval(() => {\n            this.getRemainingTime()\n        }, 1000);\n    }\n\n    componentWillUnmount(){\n        clearTimeout(this.timer)\n    }\n\n    getRemainingTime(){\n        let startPhase = new Date(this.state.timestamps[this.getPhaseForTimestamp(this.state.currentPhase)]);\n        let endPhase = startPhase.setSeconds(startPhase.getSeconds() + this.getTimerForPhase(this.state.currentPhase));\n        let remainingTime = endPhase - Date.now();\n        if(remainingTime<=0){\n            remainingTime = 0;\n        }\n        this.setState({\n            timeLeft: remainingTime\n        });\n    }\n\n    getUser() {\n        return this.state.web3.eth\n            .getAccounts()\n            .then(addresses => {\n                console.log(addresses)\n                return addresses[0];\n            })\n            .catch(err => {\n                console.log('error getting address ' + err);\n            });\n    }\n\n    async getCurrentTimestamp() {\n        return await this.state.contract.methods\n            .current_timestamps()\n            .call({from: this.state.user})\n            .then(res => {\n                return (({commit, commit_and_ready_for_reveal, payout, reveal}) => {\n                    commit = new Date(this.hexToNumber(commit._hex)*1000);\n                    commit_and_ready_for_reveal = new Date(this.hexToNumber(commit_and_ready_for_reveal._hex)*1000);\n                    payout = new Date(this.hexToNumber(payout._hex)*1000);\n                    reveal = new Date(this.hexToNumber(reveal._hex)*1000);\n                    return {commit, commit_and_ready_for_reveal, payout, reveal}\n                })(res);\n            })\n    }\n\n    async getTimers(){\n        return await this.state.contract.methods\n            .getTimers()\n            .call({from: this.state.user})\n            .then(res => {\n                return (({LEFT_COMMIT_AND_REVEAL, TO_ABORT, WAIT_TO_GO_TO_REVEAL_PHASE, TO_REVEAL}) => {\n                    LEFT_COMMIT_AND_REVEAL = this.hexToNumber(LEFT_COMMIT_AND_REVEAL._hex);\n                    TO_ABORT = this.hexToNumber(TO_ABORT._hex)*1000;\n                    WAIT_TO_GO_TO_REVEAL_PHASE = this.hexToNumber(WAIT_TO_GO_TO_REVEAL_PHASE._hex);\n                    TO_REVEAL = this.hexToNumber(TO_REVEAL._hex);\n                    return {LEFT_COMMIT_AND_REVEAL, TO_ABORT, WAIT_TO_GO_TO_REVEAL_PHASE, TO_REVEAL}\n                })(res);\n            })\n    }\n\n    hexToNumber(n) {\n        return this.state.web3.utils.hexToNumber(n);\n    }\n\n    hexToNumberString(n) {\n        return this.state.web3.utils.hexToNumberString(n);\n    }\n\n    async getFee() {\n        return await this.state.contract.methods\n            .getFee()\n            .call({from: this.state.user})\n            .then(res => {\n                return this.hexToNumberString(res._hex)\n            })\n    }\n\n    async loadDataFromSC() {\n        this.setState({\n            user: await this.getUser(),\n        });\n        this.setState({\n            timestamps: await this.getCurrentTimestamp(),\n            currentPhase: await this.getCurrentPhase(),\n            committed: await this.getCommitted(),\n            fee: await this.getFee(),\n            timers: await this.getTimers(),\n            hasCommitted: await this.hasCommitted(),\n    });\n        //await  this.getNumberOfPlayers();\n        //Load jackpot\n        //load time\n        //load numberofPlayers\n        //load entryFee\n    }\n\n    getCurrentPhase() {\n        return this.state.contract.methods\n            .current_phase()\n            .call({from: this.state.user})\n            .then(res => {\n                console.log(\"CURRENT PHASE\", res)\n                return res\n            })\n    }\n\n    transactionNotification(type,key, title, description){\n        setTimeout(()=>{\n            if(type==='open'){\n                this.props.startValidating();\n                Notification.open({\n                    title,\n                    description,\n                    key,\n                    duration:60000,\n                });\n            }\n            else if(type==='success'){\n                this.props.stopValidating();\n                Notification.success({\n                    title,\n                    description,\n                    key,\n                    duration:5000,\n                });\n            }\n            else if(type==='error'){\n                this.props.stopValidating();\n                Notification.error({\n                    title,\n                    description,\n                    key,\n                    duration:5000,\n                });\n            }\n            else if(type==='close'){\n                Notification.remove(key)\n            }\n        })\n}\n\n    getCommitted() {\n        return this.state.contract.methods\n            .getCommitted()\n            .call({from: this.state.user})\n            .then(res => {\n                return res.length\n            })\n    }\n\n    hasCommitted(){\n        return this.state.contract.methods\n            .user_committed()\n            .call({from: this.state.user})\n            .then(res => {\n                return res\n            })\n    }\n\n    getTimerForPhase(phase){\n        switch(phase){\n            case 0:\n                return this.state.timers['LEFT_COMMIT_AND_REVEAL'];\n            case 1:\n                return this.state.timers['WAIT_TO_GO_TO_REVEAL_PHASE'];\n            case 2:\n                return this.state.timers['TO_REVEAL'];\n            case 3:\n                return 'payout';\n        }\n    }\n\n    getPhaseForTimestamp(status){\n        switch(status){\n            case 0:\n                return 'commit';\n            case 1:\n                return 'commit_and_ready_for_reveal';\n            case 2:\n                return 'reveal';\n            case 3:\n                return 'payout';\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {this.props.isLoading ?\n                    (<Loader>\n                        <RingLoader\n                            sizeUnit={\"px\"}\n                            size={150}\n                            color={'orange'}\n                            loading={this.props.isLoading}/>\n                    </Loader>) : (\n                        <div>\n                            {this.props.isValidating?(<LinearProgress style={{height:'5px'}}/>):(<div style={{height:'5px'}}/>)}\n                            <div>\n                                <BrowserRouter>\n                                        <Header/>\n                                        <div id=\"style-7\" style={{overflowY:'auto'}}>\n                                        <Routes state={this.state} cookies={this.props.cookies} transactionNotification = {(type, key, title, message)=>this.transactionNotification(type, key, title, message)}/>\n                                        </div>\n                                            <Footer/>\n                                </BrowserRouter>\n                            </div>\n                        </div>\n                    )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        isLoading: state.ui.isLoading,\n        isValidating: state.ui.isValidating,\n    };\n};\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        startLoading: () => dispatch(uiStartLoading()),\n        stopLoading: () => dispatch(uiStopLoading()),\n        startValidating: () => dispatch(uiStartValidating()),\n        stopValidating: () => dispatch(uiStopValidating()),\n    }\n};\n\nexport default withCookies(withRouter(connect(mapStateToProps, mapActionsToProps)(App)));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store/configureStore';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {CookiesProvider} from \"react-cookie\";\nimport { Web3Provider } from 'react-web3';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Web3Provider>\n        <CookiesProvider>\n            <Provider store={store}>\n                <BrowserRouter>\n                    <App/>\n                </BrowserRouter>\n            </Provider>\n        </CookiesProvider>\n    </Web3Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/lotto.000a671d.png\";"],"sourceRoot":""}